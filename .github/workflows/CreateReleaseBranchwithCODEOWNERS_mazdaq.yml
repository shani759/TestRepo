name: Create Release Branch with CODEOWNERS

on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'Repository URL (e.g., https://github.com/owner/repo)'
        required: true
        type: string
      base_branch:
        description: 'Base branch name (e.g., main, master, develop)'
        required: true
        type: string
        default: 'main'
      version:
        description: 'Release version (e.g., 25.12.00)'
        required: true
        type: string
        default: '25.12.00'

jobs:
  update-codeowners-on-release-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Extract inputs and set variables
        run: |
          set -euo pipefail  # ← ADD THIS LINE
          REPO_URL="${{ github.event.inputs.repo_url }}"
          BASE_BRANCH="${{ github.event.inputs.base_branch }}"
          VERSION="${{ github.event.inputs.version }}"
          
          # Extract owner/repo from URL (remove https://github.com/ and .git)
          REPO_PATH=$(echo $REPO_URL | sed 's|https://github.com/||' | sed 's|\.git$||')
          
          # Extract repo name from URL for naming conventions
          REPO_NAME=$(echo $REPO_URL | sed 's|.*/||' | sed 's|\.git$||')
          
          # Set branch names
          TEMP_BRANCH="ReleaseTemp-$VERSION"
          RELEASE_BRANCH="release/$VERSION"
          
          # Set git remote URL with token
          GIT_REMOTE_URL=$(echo $REPO_URL | sed "s|https://|https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@|")
          
          # Export to environment
          echo "REPO_URL=$REPO_URL" >> $GITHUB_ENV
          echo "REPO_PATH=$REPO_PATH" >> $GITHUB_ENV
          echo "BASE_BRANCH=$BASE_BRANCH" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "TEMP_BRANCH=$TEMP_BRANCH" >> $GITHUB_ENV
          echo "RELEASE_BRANCH=$RELEASE_BRANCH" >> $GITHUB_ENV
          echo "GIT_REMOTE_URL=$GIT_REMOTE_URL" >> $GITHUB_ENV
          
          echo "--- Configuration ---"
          echo "Repository URL: $REPO_URL"
          echo "Repository Path: $REPO_PATH"
          echo "Base Branch: $BASE_BRANCH"
          echo "Version: $VERSION"
          echo "Repository Name: $REPO_NAME"
          echo "Temp Branch: $TEMP_BRANCH"
          echo "Release Branch: $RELEASE_BRANCH"
          echo "-------------------"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO_PATH }}
          ref: ${{ github.event.inputs.base_branch }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Create temporary patch branch and update CODEOWNERS
        run: |
          set -euo pipefail  # ← ADD THIS LINE
          echo "--- Creating temp branch: $TEMP_BRANCH ---"
          git checkout -b $TEMP_BRANCH
          
          echo "--- Checking for CODEOWNERS.release file ---"
          if [ -f "CODEOWNERS.release" ]; then
            echo "✅ Found CODEOWNERS.release file"
            echo "--- Content of CODEOWNERS.release ---"
            cat CODEOWNERS.release
            echo "------------------------------------"
            
            echo "--- Copying CODEOWNERS.release to CODEOWNERS ---"
            cp CODEOWNERS.release CODEOWNERS
            
            echo "--- Verifying new CODEOWNERS content ---"
            cat CODEOWNERS
            echo "---------------------------------------"
          else
            echo "❌ CODEOWNERS.release file not found in repository root"
            echo "Available files in root:"
            ls -la
            exit 1
          fi

      - name: Check git status before commit
        run: |
          set -euo pipefail  # ← ADD THIS LINE
          echo "--- Checking git status ---"
          git status
          echo "---------------------------"

      - name: Commit and push temp branch with CODEOWNERS update
        run: |
          set -euo pipefail  # ← ADD THIS LINE
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin $GIT_REMOTE_URL
          
          # Add the updated CODEOWNERS file
          git add CODEOWNERS
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            echo "--- Committing CODEOWNERS changes ---"
            git commit -m "Update CODEOWNERS for release branch $VERSION from $BASE_BRANCH (copied from CODEOWNERS.release)"
            
            echo "--- Pushing temp branch with changes ---"
            git push origin $TEMP_BRANCH
          fi

      - name: Create release branch from temp
        run: |
          echo "--- Creating release branch: $RELEASE_BRANCH ---"
          git checkout -b $RELEASE_BRANCH
          git push origin HEAD:$RELEASE_BRANCH

      - name: Delete temporary branch
        run: |          
          set -euo pipefail  # ← ADD THIS LINE
          echo "--- Deleting temporary branch: $TEMP_BRANCH ---"
          git push origin --delete $TEMP_BRANCH
          echo "Temporary branch $TEMP_BRANCH deleted successfully"

      - name: Summary
        run: |
          set -euo pipefail  # ← ADD THIS LINE
          echo "--- Release Branch Creation Summary ---"
          echo "✅ Repository: $REPO_URL"
          echo "✅ Base Branch: $BASE_BRANCH"
          echo "✅ Release Version: $VERSION"
          echo "✅ Release Branch: $RELEASE_BRANCH"
          echo "✅ CODEOWNERS updated from CODEOWNERS.release"
          echo "-------------------------------------"
